#include <stdio.h>

// Function to perform interpolation search
int interpolationSearch(int arr[], int n, int x) {
    int low = 0, high = n - 1;

    while (low <= high && x >= arr[low] && x <= arr[high]) {
        // Use the formula to find the probable position
        int pos = low + ((double)(high - low) / (arr[high] - arr[low])) * (x - arr[low]);

        // If the element is found
        if (arr[pos] == x)
            return pos;

        // If x is smaller, ignore the right half
        if (arr[pos] > x)
            high = pos - 1;
        // If x is larger, ignore the left half
        else
            low = pos + 1;
    }

    return -1; // Element not found
}

int main() {
    int n, x;

    // Input the size of the array
    printf("Enter the size of the array: ");
    scanf("%d", &n);

    int arr[n];

    // Input array elements
    printf("Enter the sorted array elements:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Input the element to search
    printf("Enter the element to search: ");
    scanf("%d", &x);

    // Perform interpolation search
    int result = interpolationSearch(arr, n, x);

    // Output the result
    if (result != -1)
        printf("Element found at index %d\n", result);
    else
        printf("Element not found in the array\n");

    return 0;
}
